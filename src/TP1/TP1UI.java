/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package TP1;

import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author someone
 */
public class TP1UI extends javax.swing.JFrame {

    /**
     * Creates new form TP1UI
     */
    public TP1UI() {
        initComponents();
        jTextPane1.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jButtonPlayPause = new javax.swing.JButton();
        jButtonRewind = new javax.swing.JButton();
        jButtonForward = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItemOpenFile = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        javax.swing.JMenuItem jMenuItemConfig = new javax.swing.JMenuItem();

        jFileChooser1.setFileFilter(new ASMFilter());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane2.setViewportView(jTextPane1);

        jButtonPlayPause.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Green"));
        jButtonPlayPause.setIcon(new javax.swing.ImageIcon("/home/someone/Downloads/play-pause(3).png")); // NOI18N

        jButtonRewind.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Green"));
        jButtonRewind.setIcon(new javax.swing.ImageIcon("/home/someone/Downloads/rewind.png")); // NOI18N

        jButtonForward.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Green"));
        jButtonForward.setIcon(new javax.swing.ImageIcon("/home/someone/Downloads/forward.png")); // NOI18N

        jMenu3.setText("File");

        jMenuItemOpenFile.setText("Open File");
        jMenuItemOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenFileActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemOpenFile);

        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");

        jMenuItemConfig.setText("Config");
        jMenuItemConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConfigActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItemConfig);

        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(348, 348, 348)
                .addComponent(jButtonRewind)
                .addGap(18, 18, 18)
                .addComponent(jButtonPlayPause)
                .addGap(18, 18, 18)
                .addComponent(jButtonForward)
                .addContainerGap(361, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonForward)
                    .addComponent(jButtonRewind)
                    .addComponent(jButtonPlayPause)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenFileActionPerformed
        int returnVal = jFileChooser1.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            asmFile = jFileChooser1.getSelectedFile();
            try{
                System.out.println(new FileReader( asmFile.getAbsolutePath() ));
                AssemblerLoader loader = new AssemblerLoader();
                try {
                    List<Expression> list = loader.loadFile(asmFile.getAbsolutePath());
                    
                    display(list);
                    
                } catch (IllegalArgumentException e) {
                    JOptionPane.showMessageDialog(new JFrame(), e.getMessage(), "Dialog",
        JOptionPane.ERROR_MESSAGE);
                }
            } catch (IOException ex) {
                System.out.println("problem accesssing file"+asmFile.getAbsolutePath());
            }
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_jMenuItemOpenFileActionPerformed

    private void jMenuItemConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConfigActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemConfigActionPerformed
    
    private void display(List<Expression> instructions) {
        // Create a custom StyledDocument 
        StyledDocument doc = jTextPane1.getStyledDocument(); 
                
        // Create and set a Style for the text 
        Style style = doc.addStyle("customStyle", null); 
        StyleConstants.setForeground(style, Color.BLACK); 
        StyleConstants.setBold(style, true); 
                    
        // Set the StyledDocument 
        jTextPane1.setStyledDocument(doc); 
                    
        for (int i = 0; i < instructions.size(); i++) {
            // Insert text with custom style 
            try { 
                doc.insertString(doc.getLength(), String.valueOf(instructions.get(i).row)+"  ", null);
                doc.insertString(doc.getLength(), instructions.get(i).operation, style); 

                switch (instructions.get(i).operation.toUpperCase()) {
                    case "MOV":
                        doc.insertString(doc.getLength(), " "+instructions.get(i).operands[0]+",", null);
                        doc.insertString(doc.getLength(), " "+instructions.get(i).operands[1]+"\n", null);
                        break;
                    case "ADD":
                    case "SUB":
                    case "LOAD":
                    case "STORE":
                        doc.insertString(doc.getLength(), " "+instructions.get(i).operands[0]+"\n", null);
                    default:
                }
            } catch (BadLocationException e) { 
                e.printStackTrace(); 
            } 
        }
    }
            
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TP1UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TP1UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TP1UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TP1UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TP1UI().setVisible(true);
            }
        });
    }
    
    private File asmFile; 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonForward;
    private javax.swing.JButton jButtonPlayPause;
    private javax.swing.JButton jButtonRewind;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItemOpenFile;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
