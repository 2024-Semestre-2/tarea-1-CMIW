/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package TP1;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.Timer;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author someone
 */
public class TP1UI extends javax.swing.JFrame {

    /**
     * Creates new form TP1UI
     */
    public TP1UI() {
        initComponents();
        jTextPane1.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jFrame1 = new javax.swing.JFrame();
        jLabelTotalMemorySize = new javax.swing.JLabel();
        jTextFieldTotalMemorySize = new javax.swing.JTextField();
        jButtonConfigOk = new javax.swing.JButton();
        jLabelUserMemorySize = new javax.swing.JLabel();
        jLabelOsMemorySize = new javax.swing.JLabel();
        jTextFieldUserMemorySize = new javax.swing.JTextField();
        jTextFieldOsMemorySize = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jButtonPlayPause = new javax.swing.JButton();
        jLabelAC = new javax.swing.JLabel();
        jTextFieldAC = new javax.swing.JTextField();
        jLabelAX = new javax.swing.JLabel();
        jTextFieldAX = new javax.swing.JTextField();
        jLabelBX = new javax.swing.JLabel();
        jTextFieldBX = new javax.swing.JTextField();
        jLabelCX = new javax.swing.JLabel();
        jTextFieldCX = new javax.swing.JTextField();
        jLabelDX = new javax.swing.JLabel();
        jTextFieldDX = new javax.swing.JTextField();
        jLabelRegister = new javax.swing.JLabel();
        jLabelIR = new javax.swing.JLabel();
        jTextFieldIR = new javax.swing.JTextField();
        jLabelPC = new javax.swing.JLabel();
        jTextFieldPC = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListMemory = new javax.swing.JList<>();
        jLabelMemory = new javax.swing.JLabel();
        jButtonReload = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItemOpenFile = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        javax.swing.JMenuItem jMenuItemConfig = new javax.swing.JMenuItem();

        jFileChooser1.setFileFilter(new ASMFilter());

        jFrame1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jFrame1.setTitle("Config Settings");
        jFrame1.setResizable(false);
        jFrame1.setSize(new java.awt.Dimension(600, 400));

        jLabelTotalMemorySize.setText("Total Memory Size");

        jButtonConfigOk.setText("OK");
        jButtonConfigOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfigOkActionPerformed(evt);
            }
        });

        jLabelUserMemorySize.setText("User Memory Size");

        jLabelOsMemorySize.setText("OS Memory Size");

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap(522, Short.MAX_VALUE)
                .addComponent(jButtonConfigOk)
                .addContainerGap())
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGap(167, 167, 167)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addComponent(jLabelTotalMemorySize)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldTotalMemorySize, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelUserMemorySize)
                            .addComponent(jLabelOsMemorySize))
                        .addGap(18, 18, 18)
                        .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldUserMemorySize)
                            .addComponent(jTextFieldOsMemorySize, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap(133, Short.MAX_VALUE)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTotalMemorySize)
                    .addComponent(jTextFieldTotalMemorySize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelUserMemorySize)
                    .addComponent(jTextFieldUserMemorySize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelOsMemorySize)
                    .addComponent(jTextFieldOsMemorySize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(129, 129, 129)
                .addComponent(jButtonConfigOk)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane2.setViewportView(jTextPane1);

        jButtonPlayPause.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Green"));
        jButtonPlayPause.setIcon(new javax.swing.ImageIcon("/home/someone/Projects/Java/tarea-1-CMIW/pause-play.png")); // NOI18N
        jButtonPlayPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlayPauseActionPerformed(evt);
            }
        });

        jLabelAC.setText("AC");

        jLabelAX.setText("AX");

        jLabelBX.setText("BX");

        jLabelCX.setText("CX");

        jLabelDX.setText("DX");

        jLabelRegister.setText("Registers");

        jLabelIR.setText("IR");

        jLabelPC.setText("PC");

        jScrollPane1.setViewportView(jListMemory);

        jLabelMemory.setText("Memory");

        jButtonReload.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Green"));
        jButtonReload.setIcon(new javax.swing.ImageIcon("/home/someone/Projects/Java/tarea-1-CMIW/reload.png")); // NOI18N
        jButtonReload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReloadActionPerformed(evt);
            }
        });

        jMenu3.setText("File");

        jMenuItemOpenFile.setText("Open File");
        jMenuItemOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenFileActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemOpenFile);

        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");

        jMenuItemConfig.setText("Config");
        jMenuItemConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConfigActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItemConfig);

        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelRegister)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelAC)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldAC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabelAX)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldAX, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabelBX)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldBX, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabelCX)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldCX, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabelDX)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldDX, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabelIR)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldIR, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabelPC)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldPC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabelMemory))
                                .addGap(0, 36, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonPlayPause, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonReload, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(184, 184, 184))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelRegister)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabelPC)
                                .addComponent(jTextFieldPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabelAC)
                                .addComponent(jTextFieldAC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelAX)
                                .addComponent(jTextFieldAX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelBX)
                                .addComponent(jTextFieldBX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelCX)
                                .addComponent(jTextFieldCX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelDX)
                                .addComponent(jTextFieldDX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelIR)
                                .addComponent(jTextFieldIR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabelMemory)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonPlayPause, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonReload, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenFileActionPerformed
        int returnVal = jFileChooser1.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            asmFile = jFileChooser1.getSelectedFile();
            try {
                List<Expression> list = init();
                
                ActionListener aL = new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent ae) {
                        if (kernel.peekInstruction() != null) {
                            kernel.execute();
                            //System.out.println("AC: "+cpu.ac()+" AX: "+cpu.ax()+" BX: "+cpu.bx()+" CX: "+cpu.cx()+" DX: "+cpu.dx());
                            
                            rowCounter += 1;
                            clearDisplays();
                            loadDisplay(list);
                            jTextFieldAC.setText(String.valueOf(kernel.ac()));
                            jTextFieldAX.setText(String.valueOf(kernel.ax()));
                            jTextFieldBX.setText(String.valueOf(kernel.bx()));
                            jTextFieldCX.setText(String.valueOf(kernel.cx()));
                            jTextFieldDX.setText(String.valueOf(kernel.dx()));
                            jTextFieldPC.setText(String.valueOf(kernel.pc()));
                            jTextFieldIR.setText(kernel.ir());
                            
                            DefaultListModel<String> listModel = new DefaultListModel<>();
                            listModel.addAll(kernel.getMemoryArray());
                            jListMemory.setModel( listModel );
                            
                            ActionListener aL1 = new ActionListener() {
                                @Override
                                public void actionPerformed(ActionEvent ae) {
                                    kernel.updateProcess();
                                    DefaultListModel<String> listModel = new DefaultListModel<>();
                                    listModel.addAll(kernel.getMemoryArray());
                                    jListMemory.setModel( listModel );
                                }
                            };
                            
                            Timer timer =  new Timer(1000, aL1);
                            timer.start();
                            
                        } else {
                            controller.stop();
                        }
                    }
                };
                
                this.controller = new Timer(1110, aL);//create the timer which calls the actionperformed method for every 1000 millisecond(1 second=1000 millisecond)
                this.controller.setRepeats(true);
                    
            } catch (IllegalArgumentException e) {
                JOptionPane.showMessageDialog(new JFrame(), e.getMessage(), "Dialog",
        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_jMenuItemOpenFileActionPerformed

    private void jMenuItemConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConfigActionPerformed
        jFrame1.setVisible(true);
        jTextFieldTotalMemorySize.setText(String.valueOf(totalMemorySize));
        jTextFieldUserMemorySize.setText(String.valueOf(userMemorySize));
        jTextFieldOsMemorySize.setText(String.valueOf(osMemorySize));
    }//GEN-LAST:event_jMenuItemConfigActionPerformed

    private void jButtonConfigOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfigOkActionPerformed
        if (Integer.parseInt(jTextFieldTotalMemorySize.getText()) >= (Integer.parseInt(jTextFieldUserMemorySize.getText()) + Integer.parseInt(jTextFieldOsMemorySize.getText())) ) {
            totalMemorySize = Integer.parseInt(jTextFieldTotalMemorySize.getText());
            userMemorySize = Integer.parseInt(jTextFieldUserMemorySize.getText());
            osMemorySize = Integer.parseInt(jTextFieldOsMemorySize.getText());
            jFrame1.dispose();
        } else {
            JOptionPane.showMessageDialog(new JFrame(), "Memory sizes don't match.", "Dialog",
        JOptionPane.ERROR_MESSAGE);
        }
        ///System.out.println(String.valueOf(totalMemorySize));
    }//GEN-LAST:event_jButtonConfigOkActionPerformed

    private void jButtonPlayPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlayPauseActionPerformed
        if (asmFile == null) {
            JOptionPane.showMessageDialog(new JFrame(), "Load a file first.", "Dialog",
        JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (this.simulationState == null || this.simulationState == "Paused") {
            this.simulationState = "Active";
            this.controller.start();
        } else {
            this.simulationState = "Paused";
            this.controller.stop();
        }
    }//GEN-LAST:event_jButtonPlayPauseActionPerformed

    private void jButtonReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReloadActionPerformed
        init();
    }//GEN-LAST:event_jButtonReloadActionPerformed
    
    private List<Expression> init() {
        AssemblerLoader loader = new AssemblerLoader();
        kernel = new Kernel(this.totalMemorySize, this.userMemorySize, this.osMemorySize);
                
        this.rowCounter = -1;
        this.clearDisplays();
                
        List<Expression> list = loader.loadFile(asmFile.getAbsolutePath());
        DefaultListModel<String> listModel = new DefaultListModel<>();
                    
        kernel.loadMemory(list);
        loadDisplay(list);
                
        listModel.addAll(kernel.getMemoryArray());
        jListMemory.setModel( listModel );
        
        return list;
    }
    
    private void clearDisplays() {
        jTextPane1.setText("");
        jTextFieldAC.setText("");
        jTextFieldAX.setText("");
        jTextFieldBX.setText("");
        jTextFieldCX.setText("");
        jTextFieldDX.setText("");
        jTextFieldPC.setText("");
        jTextFieldIR.setText("");
    }
    
    private void loadDisplay(List<Expression> instructions) {
        // Create a custom StyledDocument 
        StyledDocument doc = jTextPane1.getStyledDocument(); 
                
        // Create and set a Style for the text 
        Style bold = doc.addStyle("bold", null); 
        StyleConstants.setForeground(bold, Color.BLACK); 
        StyleConstants.setBold(bold, true); 
        
        Style selectBackground = doc.addStyle("selectBackground", null); 
        StyleConstants.setBackground(selectBackground, Color.GREEN);
        StyleConstants.setForeground(selectBackground, Color.BLACK);
        
        Style selectBackgroundBold = doc.addStyle("selectBackgroundBold", null); 
        StyleConstants.setBackground(selectBackgroundBold, Color.GREEN);
        StyleConstants.setForeground(selectBackgroundBold, Color.BLACK);
        StyleConstants.setBold(selectBackgroundBold, true); 
                    
        // Set the StyledDocument 
        jTextPane1.setStyledDocument(doc); 
                    
        for (int i = 0; i < instructions.size(); i++) {
            // Insert text with custom style 
            try { 
                if ( i == rowCounter) {
                    doc.insertString(doc.getLength(), String.valueOf(instructions.get(i).row)+"  ", selectBackground);
                    doc.insertString(doc.getLength(), instructions.get(i).operation, selectBackgroundBold); 

                    switch (instructions.get(i).operation.toUpperCase()) {
                        case "MOV":
                            doc.insertString(doc.getLength(), " "+instructions.get(i).operands[0]+",", selectBackground);
                            doc.insertString(doc.getLength(), " "+instructions.get(i).operands[1]+"\n", selectBackground);
                            break;
                        case "ADD":
                        case "SUB":
                        case "LOAD":
                        case "STORE":
                            doc.insertString(doc.getLength(), " "+instructions.get(i).operands[0]+"\n", selectBackground);
                        default:
                    }
                } else {
                    doc.insertString(doc.getLength(), String.valueOf(instructions.get(i).row)+"  ", null);
                    doc.insertString(doc.getLength(), instructions.get(i).operation, bold); 

                    switch (instructions.get(i).operation.toUpperCase()) {
                        case "MOV":
                            doc.insertString(doc.getLength(), " "+instructions.get(i).operands[0]+",", null);
                            doc.insertString(doc.getLength(), " "+instructions.get(i).operands[1]+"\n", null);
                            break;
                        case "ADD":
                        case "SUB":
                        case "LOAD":
                        case "STORE":
                            doc.insertString(doc.getLength(), " "+instructions.get(i).operands[0]+"\n", null);
                        default:
                    }
                }
            } catch (BadLocationException e) { 
                e.printStackTrace(); 
            } 
        }
    }
            
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TP1UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TP1UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TP1UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TP1UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TP1UI().setVisible(true);
            }
        });
    }
    
    private File asmFile; 
    private int totalMemorySize = 100;
    private int userMemorySize = 50;
    private int osMemorySize = 50;
    private Kernel kernel;
    private Timer controller;
    private String simulationState;
    private int rowCounter;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConfigOk;
    private javax.swing.JButton jButtonPlayPause;
    private javax.swing.JButton jButtonReload;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabelAC;
    private javax.swing.JLabel jLabelAX;
    private javax.swing.JLabel jLabelBX;
    private javax.swing.JLabel jLabelCX;
    private javax.swing.JLabel jLabelDX;
    private javax.swing.JLabel jLabelIR;
    private javax.swing.JLabel jLabelMemory;
    private javax.swing.JLabel jLabelOsMemorySize;
    private javax.swing.JLabel jLabelPC;
    private javax.swing.JLabel jLabelRegister;
    private javax.swing.JLabel jLabelTotalMemorySize;
    private javax.swing.JLabel jLabelUserMemorySize;
    private javax.swing.JList<String> jListMemory;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItemOpenFile;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextFieldAC;
    private javax.swing.JTextField jTextFieldAX;
    private javax.swing.JTextField jTextFieldBX;
    private javax.swing.JTextField jTextFieldCX;
    private javax.swing.JTextField jTextFieldDX;
    private javax.swing.JTextField jTextFieldIR;
    private javax.swing.JTextField jTextFieldOsMemorySize;
    private javax.swing.JTextField jTextFieldPC;
    private javax.swing.JTextField jTextFieldTotalMemorySize;
    private javax.swing.JTextField jTextFieldUserMemorySize;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
